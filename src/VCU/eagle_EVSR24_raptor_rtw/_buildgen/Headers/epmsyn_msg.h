/********************************************************************************
FILE:         epmsyn_msg.h
DESCRIPTION:  Component wise header file for Copy process.
              DAMOS V5.8.3 WinServer 2008 R2
              Format N_MsgH
              Message Concept Version V2.3.1
              Do not edit this file

COPYRIGHT:    All rights reserved by ROBERT BOSCH GMBH, STUTTGART


*********************************************************************************/
#ifndef _EPMSYN_MSG_H
#define _EPMSYN_MSG_H
/* --------------extern Declaration of Original Messages--------------------*/


#ifndef __EPMSYN_NUMINTTYP_EXT__
#define __EPMSYN_NUMINTTYP_EXT__
extern uint32 EpmSyn_numIntTyp;
#endif /* __EPMSYN_NUMINTTYP_EXT__ */

#ifndef __EPMCAS_PHIADAP_EXT__
#define __EPMCAS_PHIADAP_EXT__
extern sint16 EpmCaS_phiAdap[];
#endif /* __EPMCAS_PHIADAP_EXT__ */

#ifndef __EPMCAS_PHIDIFFAVRGLIM_EXT__
#define __EPMCAS_PHIDIFFAVRGLIM_EXT__
extern sint16 EpmCaS_phiDiffAvrgLim[];
#endif /* __EPMCAS_PHIDIFFAVRGLIM_EXT__ */

#ifndef __EPMSYN_PHIDIFF_EXT__
#define __EPMSYN_PHIDIFF_EXT__
extern sint16 EpmSyn_phiDiff;
#endif /* __EPMSYN_PHIDIFF_EXT__ */

#ifndef __EPMSYN_PHIINT_EXT__
#define __EPMSYN_PHIINT_EXT__
extern sint16 EpmSyn_phiInt;
#endif /* __EPMSYN_PHIINT_EXT__ */

#ifndef __EPM_NENG_EXT__
#define __EPM_NENG_EXT__
extern sint16 Epm_nEng;
#endif /* __EPM_NENG_EXT__ */

#ifndef __EPMSYN_CTINCENGPOS_10MS_EXT__
#define __EPMSYN_CTINCENGPOS_10MS_EXT__
extern uint16 EpmSyn_ctIncEngPos_10ms;
#endif /* __EPMSYN_CTINCENGPOS_10MS_EXT__ */

#ifndef __EPMCRS_CTINC_EXT__
#define __EPMCRS_CTINC_EXT__
extern uint8                    EpmCrS_ctInc;
#endif /* __EPMCRS_CTINC_EXT__ */

#ifndef __EPMCRS_STSIGMODE_EXT__
#define __EPMCRS_STSIGMODE_EXT__
extern uint8                    EpmCrS_stSigMode;
#endif /* __EPMCRS_STSIGMODE_EXT__ */

#ifndef __EPMSEQ_NUMINTTYP_EXT__
#define __EPMSEQ_NUMINTTYP_EXT__
extern uint8                    EpmSeq_numIntTyp;
#endif /* __EPMSEQ_NUMINTTYP_EXT__ */

#ifndef __EPMSYN_STCRSPOS_EXT__
#define __EPMSYN_STCRSPOS_EXT__
extern uint8                    EpmSyn_stCrSPos;
#endif /* __EPMSYN_STCRSPOS_EXT__ */

#ifndef __EPMSYN_STRR_EXT__
#define __EPMSYN_STRR_EXT__
extern uint8 EpmSyn_stRR[];
#endif /* __EPMSYN_STRR_EXT__ */

#ifndef __EPM_STOPMODE_EXT__
#define __EPM_STOPMODE_EXT__
extern uint8                    Epm_stOpMode;
#endif /* __EPM_STOPMODE_EXT__ */

/* -------------- macro defintion of messages --------------------*/


#ifndef SET_EpmCrS_ctInc 
#define SET_EpmCrS_ctInc (EpmCrS_ctInc=TRUE)
#endif
#ifndef CLR_EpmCrS_ctInc 
#define CLR_EpmCrS_ctInc (EpmCrS_ctInc=FALSE)
#endif
#ifndef GET_EpmCrS_ctInc 
#define GET_EpmCrS_ctInc (EpmCrS_ctInc)
#endif
#ifndef PUT_EpmCrS_ctInc 
#define PUT_EpmCrS_ctInc(val) ((val) ? SET_EpmCrS_ctInc : CLR_EpmCrS_ctInc)
#endif


#ifndef SET_EpmCrS_stSigMode 
#define SET_EpmCrS_stSigMode (EpmCrS_stSigMode=TRUE)
#endif
#ifndef CLR_EpmCrS_stSigMode 
#define CLR_EpmCrS_stSigMode (EpmCrS_stSigMode=FALSE)
#endif
#ifndef GET_EpmCrS_stSigMode 
#define GET_EpmCrS_stSigMode (EpmCrS_stSigMode)
#endif
#ifndef PUT_EpmCrS_stSigMode 
#define PUT_EpmCrS_stSigMode(val) ((val) ? SET_EpmCrS_stSigMode : CLR_EpmCrS_stSigMode)
#endif


#ifndef SET_EpmSeq_numIntTyp 
#define SET_EpmSeq_numIntTyp (EpmSeq_numIntTyp=TRUE)
#endif
#ifndef CLR_EpmSeq_numIntTyp 
#define CLR_EpmSeq_numIntTyp (EpmSeq_numIntTyp=FALSE)
#endif
#ifndef GET_EpmSeq_numIntTyp 
#define GET_EpmSeq_numIntTyp (EpmSeq_numIntTyp)
#endif
#ifndef PUT_EpmSeq_numIntTyp 
#define PUT_EpmSeq_numIntTyp(val) ((val) ? SET_EpmSeq_numIntTyp : CLR_EpmSeq_numIntTyp)
#endif


#ifndef SET_EpmSyn_stCrSPos 
#define SET_EpmSyn_stCrSPos (EpmSyn_stCrSPos=TRUE)
#endif
#ifndef CLR_EpmSyn_stCrSPos 
#define CLR_EpmSyn_stCrSPos (EpmSyn_stCrSPos=FALSE)
#endif
#ifndef GET_EpmSyn_stCrSPos 
#define GET_EpmSyn_stCrSPos (EpmSyn_stCrSPos)
#endif
#ifndef PUT_EpmSyn_stCrSPos 
#define PUT_EpmSyn_stCrSPos(val) ((val) ? SET_EpmSyn_stCrSPos : CLR_EpmSyn_stCrSPos)
#endif


#ifndef SET_Epm_stOpMode 
#define SET_Epm_stOpMode (Epm_stOpMode=TRUE)
#endif
#ifndef CLR_Epm_stOpMode 
#define CLR_Epm_stOpMode (Epm_stOpMode=FALSE)
#endif
#ifndef GET_Epm_stOpMode 
#define GET_Epm_stOpMode (Epm_stOpMode)
#endif
#ifndef PUT_Epm_stOpMode 
#define PUT_Epm_stOpMode(val) ((val) ? SET_Epm_stOpMode : CLR_Epm_stOpMode)
#endif

#endif
