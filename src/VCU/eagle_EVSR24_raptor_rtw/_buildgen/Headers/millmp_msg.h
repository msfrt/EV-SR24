/********************************************************************************
FILE:         millmp_msg.h
DESCRIPTION:  Component wise header file for Copy process.
              DAMOS V5.8.3 WinServer 2008 R2
              Format N_MsgH
              Message Concept Version V2.3.1
              Do not edit this file

COPYRIGHT:    All rights reserved by ROBERT BOSCH GMBH, STUTTGART


*********************************************************************************/
#ifndef _MILLMP_MSG_H
#define _MILLMP_MSG_H
/* --------------extern Declaration of Original Messages--------------------*/


#ifndef __DSM_STFADEOUT_EXT__
#define __DSM_STFADEOUT_EXT__
extern uint16 DSM_stFadeOut;
#endif /* __DSM_STFADEOUT_EXT__ */

#ifndef __COENG_ST_EXT__
#define __COENG_ST_EXT__
extern uint8                    CoEng_st;
#endif /* __COENG_ST_EXT__ */

#ifndef __ERRLMP_STMIL_EXT__
#define __ERRLMP_STMIL_EXT__
extern uint8                    ErrLmp_stMIL;
#endif /* __ERRLMP_STMIL_EXT__ */

#ifndef __MILLMP_STMIL_EXT__
#define __MILLMP_STMIL_EXT__
extern uint8                    MILLmp_stMIL;
#endif /* __MILLMP_STMIL_EXT__ */

#ifndef __SYC_STSUB_EXT__
#define __SYC_STSUB_EXT__
extern uint8                    SyC_stSub;
#endif /* __SYC_STSUB_EXT__ */

#ifndef __MILLMP_STPS_EXT__
#define __MILLMP_STPS_EXT__
extern bool                     MILLmp_stPs;
#endif /* __MILLMP_STPS_EXT__ */

/* -------------- macro defintion of messages --------------------*/


#ifndef SET_CoEng_st 
#define SET_CoEng_st (CoEng_st=TRUE)
#endif
#ifndef CLR_CoEng_st 
#define CLR_CoEng_st (CoEng_st=FALSE)
#endif
#ifndef GET_CoEng_st 
#define GET_CoEng_st (CoEng_st)
#endif
#ifndef PUT_CoEng_st 
#define PUT_CoEng_st(val) ((val) ? SET_CoEng_st : CLR_CoEng_st)
#endif


#ifndef SET_ErrLmp_stMIL 
#define SET_ErrLmp_stMIL (ErrLmp_stMIL=TRUE)
#endif
#ifndef CLR_ErrLmp_stMIL 
#define CLR_ErrLmp_stMIL (ErrLmp_stMIL=FALSE)
#endif
#ifndef GET_ErrLmp_stMIL 
#define GET_ErrLmp_stMIL (ErrLmp_stMIL)
#endif
#ifndef PUT_ErrLmp_stMIL 
#define PUT_ErrLmp_stMIL(val) ((val) ? SET_ErrLmp_stMIL : CLR_ErrLmp_stMIL)
#endif


#ifndef SET_MILLmp_stMIL 
#define SET_MILLmp_stMIL (MILLmp_stMIL=TRUE)
#endif
#ifndef CLR_MILLmp_stMIL 
#define CLR_MILLmp_stMIL (MILLmp_stMIL=FALSE)
#endif
#ifndef GET_MILLmp_stMIL 
#define GET_MILLmp_stMIL (MILLmp_stMIL)
#endif
#ifndef PUT_MILLmp_stMIL 
#define PUT_MILLmp_stMIL(val) ((val) ? SET_MILLmp_stMIL : CLR_MILLmp_stMIL)
#endif


#ifndef SET_SyC_stSub 
#define SET_SyC_stSub (SyC_stSub=TRUE)
#endif
#ifndef CLR_SyC_stSub 
#define CLR_SyC_stSub (SyC_stSub=FALSE)
#endif
#ifndef GET_SyC_stSub 
#define GET_SyC_stSub (SyC_stSub)
#endif
#ifndef PUT_SyC_stSub 
#define PUT_SyC_stSub(val) ((val) ? SET_SyC_stSub : CLR_SyC_stSub)
#endif


#ifndef SET_MILLmp_stPs 
#define SET_MILLmp_stPs (MILLmp_stPs=TRUE)
#endif
#ifndef CLR_MILLmp_stPs 
#define CLR_MILLmp_stPs (MILLmp_stPs=FALSE)
#endif
#ifndef GET_MILLmp_stPs 
#define GET_MILLmp_stPs (MILLmp_stPs)
#endif
#ifndef PUT_MILLmp_stPs 
#define PUT_MILLmp_stPs(val) ((val) ? SET_MILLmp_stPs : CLR_MILLmp_stPs)
#endif

#endif
