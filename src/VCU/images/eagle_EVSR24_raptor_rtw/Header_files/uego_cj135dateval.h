
/*<RBHead>
 *************************************************************************
 *                                                                       *
 *                      ROBERT BOSCH GMBH                                *
 *                          STUTTGART                                    *
 *                                                                       *
 *          Alle Rechte vorbehalten - All rights reserved                *
 *                                                                       *
 *************************************************************************  
 *
 *    __   __   ___  ___
 *   /_ / /  / /__  /    /__/
 *  /__/ /__/ __ / /__  /  /
 *
 *
 *************************************************************************
 *    Administrative Information (automatically filled in by eASEE)      *
 *************************************************************************
 *
 * $Filename__:uego_cj135dateval.h$
 *
 * $Author____:LZE2ST$
 *
 * $Function__:further platform development$
 *
 *************************************************************************
 * $Domain____:SDOM$
 * $User______:LZE2ST$
 * $Date______:04.07.2012$
 * $Class_____:SWHDR$
 * $Name______:uego_cj135dateval$
 * $Variant___:3.2.0$
 * $Revision__:0$
 * $Type______:H$
 * $State_____:AVAILABLE$
 * $Generated_:$
 *************************************************************************
 *
 * $UniqueName:$
 * $Component_:$
 *
 * $FDEF______:$
 *
 *************************************************************************
 * List Of Changes
 *
 * $History
 * 
 * 3.2.0; 0     04.07.2012 LZE2ST
 *   further platform development
 * 
 * $
 *
 ***************************************************************************************************
 *
 *   T H I S   I S   A   G E N E R A T E D   F I L E   F R O M      A  S  C  E  T
 *
 ***************************************************************************************************
 * Autor:              lze2st
 * Date:               04.07.2012  10:38:33
 * Modulname:          UEGO_CJ135DatEval
 * Filename:           UEGO_CJ135DatEval.h
 * Filetype:           header
 * Implementation:     Impl
 *
 * $Generated by ASCET-SD: V6.1.3 RB-DGS 1.0
 * Expander:           Generic  CID: 610
 * Codegenerator:      ASCET-SE-RBPT V6.1.3.59.3
 * Target:             Generic:DGS-MEDC17 [V6.1.3.59.3]
 * CgenOptions:
 *             Allow Double bit Size for Division Numerators=true
 *             Generate Round Operation on float to integer Assignment=false
 *             Generate Access Methods for dT (Alternative: use OS dT directly)=false
 *             Temp Vars always 32 bit (integer)=false
 *             Generate Limiters (may be changed locally)=true
 *             Use SHIFT Operation on Signed Values instead of DIV Operation=true
 *             Optimize Direct Access Methods (Multiple Levels)=true
 *             Protected Vector Indices=false
 *             Optimize Direct Access Methods (One Level)=true
 *             Add Comment with Generation Information for each Component=false
 *             Add Comment with Implementation Information for each Assignment Statement=true
 *             Add Comment with Specification Source for each Statement=true
 *             Add Implementation Definitions=true
 *             Add parenthesis for readability=true
 *             Allow Limit Service for Assignment Limitation=true
 *             Arithmetic Service Set=rb-services
 *             Auto-inline private methods (Smaller code-size - may be changed locally)=false
 *             Casting=Legacy
 *             Code Generator=Object Based Controller Implementation
 *             Compiler=DGS-MEDC17 (dummy compiler)
 *             Division truncation direction=Zero (T-division)
 *             Force Parenthesis for Binary Logical Operators=true
 *             Generate Access Macros for=()
 *             Generate Data Structures=YESALL
 *             Generate Define Directives for Enum Values=true
 *             Generate Map File=false
 *             Generate OS Configuration=false
 *             Generate well-formed switch=true
 *             Hierarchical Code-Generation (may be changed locally)=false
 *             Initialise history variable with zero=true
 *             Inline directive=INLINE_FUNCTION
 *             Integer Bit Size=32
 *             Maximum bit Length (float)=32
 *             Maximum bit Length (int)=32
 *             Operating System=GENERIC_OSEK
 *             Optimize Static Actions (Restricted Modelling)=false
 *             Outline Generated Methods (may be changed locally)=false
 *             Prefix for Component Names=
 *             Private directive=static
 *             Protected against division by zero=false
 *             Protected Division against Signed Overflow=false
 *             Public directive=
 *             Result on Division by Zero=numerator
 *             Target=Generic:DGS-MEDC17
 *             Use Customized Data Type Names=false
 *             Use power of 2 approximations of literals=false
 *             Use SHIFT Operation on Signed Values instead of MUL Operation=true
 *
 ***************************************************************************************************
</RBHead>*/
#ifndef _UEGO_CJ135DATEVAL_H
#define _UEGO_CJ135DATEVAL_H

/* public method prototypes for UEGO_CJ135CALCELECCORRNCLASS_IMPL */
#ifdef _UEGO_CJ135CALCELECCORRNCLASS_IMPL_

#define START_SECTION_Fast_Codemem
#include "pragma.h"

sint16 UEGO_CJ135CALCELECCORRNCLASS_IMPL_calc_uMeasElecCorrd(UEGO_CJ135CALCELECCORRNCLASS_IMPL * self, sint16 arg_numUMeasCorrd, uint8 arg_numOPM, uint8 arg_numUCmnMod);

#define STOP_SECTION_Fast_Codemem
#include "pragma.h"

#define START_SECTION_Fast_Codemem
#include "pragma.h"

sint16 UEGO_CJ135CALCELECCORRNCLASS_IMPL_get_numUMeasCmModVcc3(UEGO_CJ135CALCELECCORRNCLASS_IMPL * self, sint16 arg_uSetPhy, uint8 arg_numOPM);

#define STOP_SECTION_Fast_Codemem
#include "pragma.h"

#define START_SECTION_Fast_Codemem
#include "pragma.h"

uint16 UEGO_CJ135CALCELECCORRNCLASS_IMPL_get_uFkal(UEGO_CJ135CALCELECCORRNCLASS_IMPL * self, uint8 arg_numOPM);

#define STOP_SECTION_Fast_Codemem
#include "pragma.h"

#define START_SECTION_Fast_Codemem
#include "pragma.h"

bool UEGO_CJ135CALCELECCORRNCLASS_IMPL_isValid(UEGO_CJ135CALCELECCORRNCLASS_IMPL * self, uint8 arg_numOPM, uint8 arg_numUCmnMod);

#define STOP_SECTION_Fast_Codemem
#include "pragma.h"

#define START_SECTION_Fast_Codemem
#include "pragma.h"

void UEGO_CJ135CALCELECCORRNCLASS_IMPL_reset(UEGO_CJ135CALCELECCORRNCLASS_IMPL * self);

#define STOP_SECTION_Fast_Codemem
#include "pragma.h"

#define START_SECTION_Fast_Codemem
#include "pragma.h"

void UEGO_CJ135CALCELECCORRNCLASS_IMPL_set_numUref22(UEGO_CJ135CALCELECCORRNCLASS_IMPL * self, sint16 arg_numUref22Corrd);

#define STOP_SECTION_Fast_Codemem
#include "pragma.h"

#define START_SECTION_Fast_Codemem
#include "pragma.h"

void UEGO_CJ135CALCELECCORRNCLASS_IMPL_set_uCmnMod(UEGO_CJ135CALCELECCORRNCLASS_IMPL * self, uint8 arg_numUCmnMod, sint16 arg_uCmnMod);

#define STOP_SECTION_Fast_Codemem
#include "pragma.h"

#define START_SECTION_Fast_Codemem
#include "pragma.h"

void UEGO_CJ135CALCELECCORRNCLASS_IMPL_set_uFkal1(UEGO_CJ135CALCELECCORRNCLASS_IMPL * self, sint16 arg_numUref1Corrd);

#define STOP_SECTION_Fast_Codemem
#include "pragma.h"

#define START_SECTION_Fast_Codemem
#include "pragma.h"

void UEGO_CJ135CALCELECCORRNCLASS_IMPL_set_uFkal2(UEGO_CJ135CALCELECCORRNCLASS_IMPL * self, sint16 arg_numUref21Corrd);

#define STOP_SECTION_Fast_Codemem
#include "pragma.h"

#define START_SECTION_Fast_Codemem
#include "pragma.h"

void UEGO_CJ135CALCELECCORRNCLASS_IMPL_set_uFKal3(UEGO_CJ135CALCELECCORRNCLASS_IMPL * self, sint16 arg_numUref3Corrd);

#define STOP_SECTION_Fast_Codemem
#include "pragma.h"

#endif /* _UEGO_CJ135CALCELECCORRNCLASS_IMPL_ */

/* _UEGO_CJ135DATEVAL_H */
#endif
