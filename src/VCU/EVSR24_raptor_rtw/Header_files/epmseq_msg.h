/********************************************************************************
FILE:         epmseq_msg.h
DESCRIPTION:  Component wise header file for Copy process.
              DAMOS V5.8.3 WinServer 2008 R2
              Format N_MsgH
              Message Concept Version V2.3.1
              Do not edit this file

COPYRIGHT:    All rights reserved by ROBERT BOSCH GMBH, STUTTGART


*********************************************************************************/
#ifndef _EPMSEQ_MSG_H
#define _EPMSEQ_MSG_H
/* --------------extern Declaration of Original Messages--------------------*/


#ifndef __EPMSEQ_NUMINCDIFFINT_EXT__
#define __EPMSEQ_NUMINCDIFFINT_EXT__
extern sint16 EpmSeq_numIncDiffInt[];
#endif /* __EPMSEQ_NUMINCDIFFINT_EXT__ */

#ifndef __EPM_NENG_EXT__
#define __EPM_NENG_EXT__
extern sint16 Epm_nEng;
#endif /* __EPM_NENG_EXT__ */

#ifndef __EPMCRS_STSIGMODE_EXT__
#define __EPMCRS_STSIGMODE_EXT__
extern uint8                    EpmCrS_stSigMode;
#endif /* __EPMCRS_STSIGMODE_EXT__ */

#ifndef __EPMSEQ_NUMINT_EXT__
#define __EPMSEQ_NUMINT_EXT__
extern uint8                    EpmSeq_numInt;
#endif /* __EPMSEQ_NUMINT_EXT__ */

#ifndef __EPMSEQ_NUMINTTYP_EXT__
#define __EPMSEQ_NUMINTTYP_EXT__
extern uint8                    EpmSeq_numIntTyp;
#endif /* __EPMSEQ_NUMINTTYP_EXT__ */

#ifndef __EPM_CTCYL_EXT__
#define __EPM_CTCYL_EXT__
extern uint8                    Epm_ctCyl;
#endif /* __EPM_CTCYL_EXT__ */

#ifndef __EPM_STOPMODE_EXT__
#define __EPM_STOPMODE_EXT__
extern uint8                    Epm_stOpMode;
#endif /* __EPM_STOPMODE_EXT__ */

/* -------------- macro defintion of messages --------------------*/


#ifndef SET_EpmCrS_stSigMode 
#define SET_EpmCrS_stSigMode (EpmCrS_stSigMode=TRUE)
#endif
#ifndef CLR_EpmCrS_stSigMode 
#define CLR_EpmCrS_stSigMode (EpmCrS_stSigMode=FALSE)
#endif
#ifndef GET_EpmCrS_stSigMode 
#define GET_EpmCrS_stSigMode (EpmCrS_stSigMode)
#endif
#ifndef PUT_EpmCrS_stSigMode 
#define PUT_EpmCrS_stSigMode(val) ((val) ? SET_EpmCrS_stSigMode : CLR_EpmCrS_stSigMode)
#endif


#ifndef SET_EpmSeq_numInt 
#define SET_EpmSeq_numInt (EpmSeq_numInt=TRUE)
#endif
#ifndef CLR_EpmSeq_numInt 
#define CLR_EpmSeq_numInt (EpmSeq_numInt=FALSE)
#endif
#ifndef GET_EpmSeq_numInt 
#define GET_EpmSeq_numInt (EpmSeq_numInt)
#endif
#ifndef PUT_EpmSeq_numInt 
#define PUT_EpmSeq_numInt(val) ((val) ? SET_EpmSeq_numInt : CLR_EpmSeq_numInt)
#endif


#ifndef SET_EpmSeq_numIntTyp 
#define SET_EpmSeq_numIntTyp (EpmSeq_numIntTyp=TRUE)
#endif
#ifndef CLR_EpmSeq_numIntTyp 
#define CLR_EpmSeq_numIntTyp (EpmSeq_numIntTyp=FALSE)
#endif
#ifndef GET_EpmSeq_numIntTyp 
#define GET_EpmSeq_numIntTyp (EpmSeq_numIntTyp)
#endif
#ifndef PUT_EpmSeq_numIntTyp 
#define PUT_EpmSeq_numIntTyp(val) ((val) ? SET_EpmSeq_numIntTyp : CLR_EpmSeq_numIntTyp)
#endif


#ifndef SET_Epm_ctCyl 
#define SET_Epm_ctCyl (Epm_ctCyl=TRUE)
#endif
#ifndef CLR_Epm_ctCyl 
#define CLR_Epm_ctCyl (Epm_ctCyl=FALSE)
#endif
#ifndef GET_Epm_ctCyl 
#define GET_Epm_ctCyl (Epm_ctCyl)
#endif
#ifndef PUT_Epm_ctCyl 
#define PUT_Epm_ctCyl(val) ((val) ? SET_Epm_ctCyl : CLR_Epm_ctCyl)
#endif


#ifndef SET_Epm_stOpMode 
#define SET_Epm_stOpMode (Epm_stOpMode=TRUE)
#endif
#ifndef CLR_Epm_stOpMode 
#define CLR_Epm_stOpMode (Epm_stOpMode=FALSE)
#endif
#ifndef GET_Epm_stOpMode 
#define GET_Epm_stOpMode (Epm_stOpMode)
#endif
#ifndef PUT_Epm_stOpMode 
#define PUT_Epm_stOpMode(val) ((val) ? SET_Epm_stOpMode : CLR_Epm_stOpMode)
#endif

#endif
